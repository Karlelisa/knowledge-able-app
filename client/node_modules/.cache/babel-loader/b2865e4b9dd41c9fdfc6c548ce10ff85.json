{"ast":null,"code":"import _defineProperty from \"/Users/karlelisawesley/Documents/HavardBootcamp/Project3/knowledge-able-app-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/karlelisawesley/Documents/HavardBootcamp/Project3/knowledge-able-app-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/karlelisawesley/Documents/HavardBootcamp/Project3/knowledge-able-app-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/karlelisawesley/Documents/HavardBootcamp/Project3/knowledge-able-app-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/karlelisawesley/Documents/HavardBootcamp/Project3/knowledge-able-app-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/karlelisawesley/Documents/HavardBootcamp/Project3/knowledge-able-app-final/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/karlelisawesley/Documents/HavardBootcamp/Project3/knowledge-able-app-final/client/src/pages/Signup.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../components/AuthService\";\nimport { FormErrors } from \"../components/SignUpErrors/formErrors\"; // import SignInSignUp from \"../components/SignInSignUp\";\n\nimport API from \"./../utils/API\";\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup() {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Signup).call(this));\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API.signUpUser(_this.state.username, _this.state.email, _this.state.password).then(function (res) {\n        // once the user has signed up\n        // send them to the About page\n        _this.props.history.replace(\"/\");\n      }).catch(function (err) {\n        return alert(err);\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.Auth = new AuthService();\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false\n    };\n    return _this;\n  } // componentDidMount() {\n  //   if (this.Auth.loggedIn()) {\n  //     this.props.history.replace(\"/\");\n  //   }\n  // }\n\n\n  _createClass(Signup, [{\n    key: \"validateField\",\n    // Email and password validation on user input. Cited: https://learnetto.com/blog/react-form-validation\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var emailValid = this.state.emailValid;\n      var passwordValid = this.state.passwordValid;\n\n      switch (fieldName) {\n        case \"email\":\n          emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n          fieldValidationErrors.email = emailValid ? \"\" : \" is invalid \";\n          break;\n\n        case \"password\":\n          passwordValid = value.length >= 8;\n          fieldValidationErrors.password = passwordValid ? \"\" : \" is invalid, must contain a minimum of eight characters in length \";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        formValid: this.state.emailValid && this.state.passwordValid\n      });\n    }\n  }, {\n    key: \"errorClass\",\n    value: function errorClass(error) {\n      return error.length === 0 ? \"\" : \"has-error\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container signUpForm\",\n        style: {\n          paddingTop: \"8\" + \"rem\",\n          paddingBottom: \"8\" + \"rem\",\n          maxWidth: \"600\" + \"px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-info text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"SignUp\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Username:\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        placeholder: \"Username\",\n        name: \"username\",\n        type: \"text\",\n        id: \"username\",\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \".concat(this.errorClass(this.state.formErrors.email)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        placeholder: \"example@gmail.com\",\n        name: \"email\",\n        type: \"email\",\n        id: \"email\",\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \".concat(this.errorClass(this.state.formErrors.password)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"pwd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        placeholder: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        id: \"pwd\",\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(FormErrors, {\n        formErrors: this.state.formErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-info btn-lg btn-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Already have an account? SignIn\")));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nexport default Signup;","map":{"version":3,"sources":["/Users/karlelisawesley/Documents/HavardBootcamp/Project3/knowledge-able-app-final/client/src/pages/Signup.js"],"names":["React","Component","Link","AuthService","FormErrors","API","Signup","handleFormSubmit","event","preventDefault","signUpUser","state","username","email","password","then","res","props","history","replace","catch","err","alert","handleChange","target","name","value","setState","validateField","Auth","formErrors","emailValid","passwordValid","formValid","fieldName","fieldValidationErrors","match","length","validateForm","error","paddingTop","paddingBottom","maxWidth","errorClass"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../components/AuthService\";\nimport { FormErrors } from \"../components/SignUpErrors/formErrors\";\n// import SignInSignUp from \"../components/SignInSignUp\";\nimport API from \"./../utils/API\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.Auth = new AuthService();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      formErrors: { email: \"\", password: \"\" },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false\n    };\n  }\n\n  // componentDidMount() {\n  //   if (this.Auth.loggedIn()) {\n  //     this.props.history.replace(\"/\");\n  //   }\n  // }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.signUpUser(this.state.username, this.state.email, this.state.password)\n      .then(res => {\n        // once the user has signed up\n        // send them to the About page\n        this.props.history.replace(\"/\");\n      })\n      .catch(err => alert(err));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  // Email and password validation on user input. Cited: https://learnetto.com/blog/react-form-validation\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case \"email\":\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? \"\" : \" is invalid \";\n        break;\n      case \"password\":\n        passwordValid = value.length >= 8;\n        fieldValidationErrors.password = passwordValid\n          ? \"\"\n          : \" is invalid, must contain a minimum of eight characters in length \";\n        break;\n      default:\n        break;\n    }\n    this.setState(\n      {\n        formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      },\n      this.validateForm\n    );\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.emailValid && this.state.passwordValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? \"\" : \"has-error\";\n  }\n\n  render() {\n    return (\n      <div\n        className=\"container signUpForm\"\n        style={{\n          paddingTop: \"8\" + \"rem\",\n          paddingBottom: \"8\" + \"rem\",\n          maxWidth: \"600\" + \"px\"\n        }}\n      >\n        <h1 className=\"text-info text-center\">SignUp</h1>\n        <br />\n        {/* <div className=\"panel panel-default\">\n          <p className=\"text-danger\">\n            <FormErrors formErrors={this.state.formErrors} />\n          </p>\n        </div> */}\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              className=\"form-control\"\n              placeholder=\"Username\"\n              name=\"username\"\n              type=\"text\"\n              id=\"username\"\n              required\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div\n            className={`form-group ${this.errorClass(\n              this.state.formErrors.email\n            )}`}\n          >\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              className=\"form-control\"\n              placeholder=\"example@gmail.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              required\n              onChange={this.handleChange}\n            />\n          </div>\n          <div\n            className={`form-group ${this.errorClass(\n              this.state.formErrors.password\n            )}`}\n          >\n            <label htmlFor=\"pwd\">Password:</label>\n            <input\n              className=\"form-control\"\n              placeholder=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              required\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"panel panel-default\">\n            <p className=\"text-danger\">\n              <FormErrors formErrors={this.state.formErrors} />\n            </p>\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-info btn-lg btn-block\">\n            Submit\n          </button>\n        </form>\n        <br />\n\n        {/* <SignInSignUp> */}\n        <p className=\"text-center\">\n          <Link to=\"/login\">Already have an account? SignIn</Link>\n        </p>\n        {/* </SignInSignUp> */}\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}