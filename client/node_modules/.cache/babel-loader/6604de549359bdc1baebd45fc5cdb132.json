{"ast":null,"code":"var _jsxFileName = \"/Users/karlelisawesley/Documents/HavardBootcamp/Project3/knowledge-able-app-final/client/src/components/SignUpErrors/formErrors.js\";\nimport React from \"react\"; // Email and password validation. Cited: https://learnetto.com/blog/react-form-validation\n// This FormErrors Component is for the Signup.js page\n\nexport var FormErrors = function FormErrors(_ref) {\n  var formErrors = _ref.formErrors;\n  return React.createElement(\"div\", {\n    className: \"formErrors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, Object.keys(formErrors).map(function (fieldName, i) {\n    if (formErrors[fieldName].length > 0) {\n      return React.createElement(\"p\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, fieldName, \" \", formErrors[fieldName]);\n    } else {\n      return \"\";\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/karlelisawesley/Documents/HavardBootcamp/Project3/knowledge-able-app-final/client/src/components/SignUpErrors/formErrors.js"],"names":["React","FormErrors","formErrors","Object","keys","map","fieldName","i","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,SACxB;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,IAAP,CAAYF,UAAZ,EAAwBG,GAAxB,CAA4B,UAACC,SAAD,EAAYC,CAAZ,EAAkB;AAC7C,QAAIL,UAAU,CAACI,SAAD,CAAV,CAAsBE,MAAtB,GAA+B,CAAnC,EAAsC;AACpC,aACE;AAAG,QAAA,GAAG,EAAED,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,SADH,OACeJ,UAAU,CAACI,SAAD,CADzB,CADF;AAKD,KAND,MAMO;AACL,aAAO,EAAP;AACD;AACF,GAVA,CADH,CADwB;AAAA,CAAnB","sourcesContent":["import React from \"react\";\n\n// Email and password validation. Cited: https://learnetto.com/blog/react-form-validation\n// This FormErrors Component is for the Signup.js page\n\nexport const FormErrors = ({ formErrors }) => (\n  <div className=\"formErrors\">\n    {Object.keys(formErrors).map((fieldName, i) => {\n      if (formErrors[fieldName].length > 0) {\n        return (\n          <p key={i}>\n            {fieldName} {formErrors[fieldName]}\n          </p>\n        );\n      } else {\n        return \"\";\n      }\n    })}\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}